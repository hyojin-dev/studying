abstract class House {
    String houseName;
    Door door;
    abstract String openDoor();
    abstract String closeDoor();
}

class FirstHouse extends House {
    public FirstHouse(String houseName, Door door) {
        this.houseName = houseName;
        this.door = door;
    }

    String openDoor() {return houseName + "에서 " + door.getDoorName() + "(을)를 열었습니다."; }
    String closeDoor(){return houseName + "에서 " + door.getDoorName() + "(을)를 닫았습니다."; }
}

class SecondHouse extends House {
    public SecondHouse(String houseName, Door door) {
        this.houseName = houseName;
        this.door = door;
    }

    String openDoor() {return houseName + "에서 " + door.getDoorName() + "(을)를 열었습니다."; }
    String closeDoor(){return houseName + "에서 " + door.getDoorName() + "(을)를 닫았습니다."; }
}

interface Door {
    String getDoorName();
    String openDoor();
    String closeDoor();
}

class FirstDoor implements Door{
    String doorName = "FirstDoor";
    public String getDoorName() {
        return doorName;
    }
    public String openDoor() {
        return doorName + " (을)를 열었습니다.";
    }
    public String closeDoor() {
        return doorName + " (을)를 닫았습니다.";
    }
}

class SecondDoor implements Door{
    String name = "SecondDoor";
    public String getDoorName() {
        return name;
    }
    public String openDoor() {
        return name + " (을)를 열었습니다.";
    }
    public String closeDoor() {
        return name + " (을)를 닫았습니다.";
    }
}

public class InterfaceAndAbstract {
    public static void main(String[] args) {
        FirstDoor firstDoor = new FirstDoor();
        SecondDoor secondDoor =  new SecondDoor();

        FirstHouse firstHouse =  new FirstHouse("FirstHouse",firstDoor);
        SecondHouse secondHouse =  new SecondHouse("SecondHouse",secondDoor);

        System.out.println(firstHouse.openDoor());
        System.out.println(secondHouse.closeDoor());
    }
}
